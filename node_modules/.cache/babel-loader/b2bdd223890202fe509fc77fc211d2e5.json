{"ast":null,"code":"import * as actionTypes from \"./cart-types\";\nimport allProducts from \"../../services/watches\";\nconst INITIAL_STATE = {\n  allProducts: allProducts,\n  //products without qty\n  cart: [],\n  //product with added qty\n  currentItem: null\n};\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.LOAD_PRODUCTS:\n      return {\n        ...state,\n        allProducts: [...state.allProducts, action.payload.products]\n      };\n    case actionTypes.ADD_TO_CART:\n      //get the item from products array\n      //const products = action.payload.products;\n      const item = state.allProducts.find(prod => prod.id === action.payload.id);\n      //\n      if (item.qty === item.maxQuantity) {\n        alert(\"Sorry, the quantity for this product is finished\");\n        let btn = action.payload.event.currentTarget;\n        btn.setAttribute(\"disabled\", \"true\");\n        btn.setAttribute(\"variant\", \"danger\");\n        btn.classList.remove(\"btn-dark\");\n        btn.classList.toggle(\"btn-danger\");\n        btn.innerHTML = \"sold out\";\n      } else {\n        alert(`${item.name} is added to cart successfuly`);\n      }\n      //console.log(state.cart.item, item.maxQuantity);\n      const checkQty = state.cart.find(item => item.qty === action.payload.item.maxQuantity);\n      //console.log(checkQty, 123);\n      //check if the item is in cart already\n      const inCart = state.cart.find(item => item.id === action.payload.id ? true : false);\n      return {\n        ...state,\n        cart: inCart ? state.cart.map(item => item.id === action.payload.id ? {\n          ...item,\n          qty: item.qty + 1\n        } : item) : [...state.cart, {\n          ...item,\n          qty: 1\n        }]\n      };\n    case actionTypes.DELETE_FROM_CART:\n      return {\n        ...state,\n        cart: state.cart.filter(item => item.id !== action.payload.id)\n      };\n    case actionTypes.ADJUST_QUANTITY:\n      return {\n        ...state,\n        cart: state.cart.map(item => item.id === action.payload.id ? {\n          ...item,\n          qty: action.payload.qty\n        } : item),\n        currentItem: state.currentItem.id === action.payload.id ? {\n          ...state.currentItem,\n          qty: action.payload.qty\n        } : {\n          ...state.currentItem,\n          qty: 1\n        }\n      };\n    case actionTypes.LOAD_CURRENT_ITEM:\n      return {\n        ...state,\n        currentItem: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["actionTypes","allProducts","INITIAL_STATE","cart","currentItem","cartReducer","state","action","type","LOAD_PRODUCTS","payload","products","ADD_TO_CART","item","find","prod","id","qty","maxQuantity","alert","btn","event","currentTarget","setAttribute","classList","remove","toggle","innerHTML","name","checkQty","inCart","map","DELETE_FROM_CART","filter","ADJUST_QUANTITY","LOAD_CURRENT_ITEM"],"sources":["C:/Sandhya/mystyles/suvarnatailors/src/redux/reducers/cart-reducer.js"],"sourcesContent":["import * as actionTypes from \"./cart-types\";\nimport allProducts from \"../../services/watches\";\n\nconst INITIAL_STATE = {\n  allProducts: allProducts, //products without qty\n  cart: [], //product with added qty\n  currentItem: null,\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.LOAD_PRODUCTS:\n      return {\n        ...state,\n        allProducts: [...state.allProducts, action.payload.products],\n      };\n    case actionTypes.ADD_TO_CART:\n      //get the item from products array\n      //const products = action.payload.products;\n      const item = state.allProducts.find(\n        (prod) => prod.id === action.payload.id\n      );\n      //\n      if (item.qty === item.maxQuantity) {\n        alert(\"Sorry, the quantity for this product is finished\");\n        let btn = action.payload.event.currentTarget;\n        btn.setAttribute(\"disabled\", \"true\");\n        btn.setAttribute(\"variant\", \"danger\");\n        btn.classList.remove(\"btn-dark\");\n        btn.classList.toggle(\"btn-danger\");\n        btn.innerHTML = \"sold out\";\n      } else {\n        alert(`${item.name} is added to cart successfuly`);\n      }\n      //console.log(state.cart.item, item.maxQuantity);\n      const checkQty = state.cart.find(\n        (item) => item.qty === action.payload.item.maxQuantity\n      );\n      //console.log(checkQty, 123);\n      //check if the item is in cart already\n      const inCart = state.cart.find((item) =>\n        item.id === action.payload.id ? true : false\n      );\n      return {\n        ...state,\n        cart: inCart\n          ? state.cart.map((item) =>\n              item.id === action.payload.id\n                ? { ...item, qty: item.qty + 1 }\n                : item\n            )\n          : [...state.cart, { ...item, qty: 1 }],\n      };\n    case actionTypes.DELETE_FROM_CART:\n      return {\n        ...state,\n        cart: state.cart.filter((item) => item.id !== action.payload.id),\n      };\n    case actionTypes.ADJUST_QUANTITY:\n      return {\n        ...state,\n        cart: state.cart.map((item) =>\n          item.id === action.payload.id\n            ? { ...item, qty: action.payload.qty }\n            : item\n        ),\n        currentItem:\n          state.currentItem.id === action.payload.id\n            ? { ...state.currentItem, qty: action.payload.qty }\n            : { ...state.currentItem, qty: 1 },\n      };\n    case actionTypes.LOAD_CURRENT_ITEM:\n      return {\n        ...state,\n        currentItem: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}